plugins{
    id 'java'
    id 'org.springframework.boot' version '3.2.5' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
    id 'java-library'
}

ext {
    set('springBootVersion', '3.2.5')
    set('resilience4jVersion', '2.2.0')
    set('springCloudVersion', '2023.0.1')
}

allprojects {
    group = 'com.raksa.app'
    version = "$version"
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'war'

    java {
        sourceCompatibility = '17'
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
//        implementation 'org.springframework.boot:spring-boot-starter-validation'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
//        implementation 'org.springframework.cloud:spring-cloud-starter-config'

        implementation 'io.micrometer:micrometer-tracing'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'

        //implementation 'javax.xml.bind:jaxb-api'
        implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
        implementation 'org.glassfish.jaxb:jaxb-runtime'

        //Added
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'
//        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
//        implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.8.9'
//        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

        runtimeOnly 'com.mysql:mysql-connector-j'
        implementation 'com.h2database:h2:2.2.224'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        runtimeOnly 'org.postgresql:postgresql'


        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

        // Security
//        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "io.github.resilience4j:resilience4j-bom:${resilience4jVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.withType(JavaExec) {
        jvmArgs += ["--add-opens", "java.base/java.lang=ALL-UNNAMED"]
    }
}
